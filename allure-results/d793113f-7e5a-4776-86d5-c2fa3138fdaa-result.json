{"name": "test_open_favourite_ads", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 10000ms exceeded.\nCall log:\n  - waiting for locator(\"//*[@id=\\\"__next\\\"]/div[1]/div/div/div[2]/div[1]/a\") to be visible", "trace": "page = <Page url='https://login.otodom.pl/?redirect_uri=https%3A%2F%2Fwww.otodom.pl%2Fapi%2Finternal%2Fhciam%2Fcallback&state...challenge=IwCNxfH8vkc-WhfN-nh09lSKpBsmSveCYuWmvAe4CBc&code_challenge_method=S256&client_id=7qfnltd713ntok0m0ohv2bn29j'>\npage_objects = (<class 'PO.playwright.home.HomePage'>, <class 'PO.playwright.login.LoginPage'>), request = <FixtureRequest for <Function test_open_favourite_ads>>\n\n    def test_open_favourite_ads(page, page_objects, request):\n        tool = request.config.getoption(\"--test-tool\")\n        HomePage, LoginPage = page_objects\n    \n        home_page = HomePage(page, tool)\n        login_page = LoginPage(page, tool)\n        home_page.navigate()\n        home_page.login()\n        login_page.fill_login_form('yana.proshack@gmail.com', 'Ya412030')\n>       login_page.check_successful_login()\n\ntests\\test_otodom.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPO\\playwright\\login.py:28: in check_successful_login\n    self.page.wait_for_selector(self.favourites_icon, timeout=10000)\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\sync_api\\_generated.py:8181: in wait_for_selector\n    self._sync(\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_page.py:424: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001AC4A7B8280>, cb = <function Channel.send.<locals>.<lambda> at 0x000001AC4A3775B0>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 10000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"//*[@id=\\\"__next\\\"]/div[1]/div/div/div[2]/div[1]/a\") to be visible\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError"}, "start": 1744286335385, "stop": 1744286378501, "uuid": "d27236c9-6548-4395-bc76-59f97fb85729", "historyId": "ccdedad6204d4366b6c4bbdbe552654b", "testCaseId": "ccdedad6204d4366b6c4bbdbe552654b", "fullName": "tests.test_otodom#test_open_favourite_ads", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_otodom"}, {"name": "host", "value": "EPBYMINW08F3"}, {"name": "thread", "value": "18984-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_otodom"}]}